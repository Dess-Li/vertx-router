buildscript {
    dependencies {
        classpath 'org.jooq:jooq:3.11.4'
        classpath 'org.jooq:jooq-meta:3.11.4'
        classpath 'org.jooq:jooq-codegen:3.11.4'
        classpath 'com.sun.xml.bind:jaxb-impl:2.3.0.1'
        classpath 'com.sun.xml.bind:jaxb-core:2.3.0.1'
        classpath 'javax.activation:activation:1.1.1'
        classpath 'org.postgresql:postgresql:42.2.4'
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
}

group 'net.deepwit'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    vertxVersion = "3.5.3"
    jooqVersion = "3.11.4"
}
configurations {
    jaxb
}
dependencies {
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.4'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.2.61'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.2.60'
    compile group: 'io.vertx', name: 'vertx-core', version: vertxVersion
    compile group: 'io.vertx', name: 'vertx-lang-kotlin', version: vertxVersion
    compile group: 'io.vertx', name: 'vertx-web', version: vertxVersion
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.jooq', name: 'jooq', version: jooqVersion
    compile group: 'org.jooq', name: 'jooq-meta', version: jooqVersion
    compile group: 'org.jooq', name: 'jooq-codegen', version: jooqVersion
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0.1'
    compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'
    testCompile group: 'io.vertx', name: 'vertx-auth-jwt', version: vertxVersion
    testCompile group: 'junit', name: 'junit', version: '4.12'
}



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

import java.io.File
import org.jooq.codegen.GenerationTool
import javax.xml.bind.JAXB
import org.jooq.meta.jaxb.Configuration

task jooqGenerate {}
jooqGenerate << {
    GenerationTool.generate(
            JAXB.unmarshal(new File("$projectDir/library.xml"), Configuration.class)
    )
}